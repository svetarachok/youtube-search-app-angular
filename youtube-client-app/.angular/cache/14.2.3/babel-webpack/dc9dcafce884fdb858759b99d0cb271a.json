{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport data from '../models/data.json';\nimport * as i0 from \"@angular/core\";\nexport let SearchService = /*#__PURE__*/(() => {\n  class SearchService {\n    constructor() {\n      this.data = data.items;\n      this.filteredData = new BehaviorSubject(this.data);\n      this.sortedData = [];\n      this.startedSearch = false;\n    }\n\n    searchData(value) {\n      this.filteredData.next(this.data.filter(searchRes => {\n        const searchList = searchRes.snippet.title.toLowerCase();\n        return searchList.includes(value.toLowerCase());\n      }));\n      this.sortedData = this.filteredData.value;\n    }\n\n    updateSearch() {\n      this.filteredData = new BehaviorSubject(this.data);\n    }\n\n    sortByDate(ascending) {\n      console.log(ascending);\n\n      if (ascending) {\n        this.filteredData.value.sort((a, b) => Date.parse(a.snippet.publishedAt) - Date.parse(b.snippet.publishedAt));\n      } else {\n        this.filteredData.value.sort((a, b) => Date.parse(b.snippet.publishedAt) - Date.parse(a.snippet.publishedAt));\n      }\n    }\n\n    sortByViewCount(ascending) {\n      if (ascending) {\n        this.filteredData.value.sort((a, b) => Number(a.statistics.viewCount) - Number(b.statistics.viewCount));\n      } else {\n        this.filteredData.value.sort((a, b) => Number(b.statistics.viewCount) - Number(a.statistics.viewCount));\n      }\n    }\n\n    searchByInput(input) {\n      this.filteredData.next(this.sortedData.filter(searchRes => {\n        const searchList = searchRes.snippet.title.toLowerCase();\n        return searchList.includes(input.toLowerCase());\n      }));\n    }\n\n  }\n\n  SearchService.ɵfac = function SearchService_Factory(t) {\n    return new (t || SearchService)();\n  };\n\n  SearchService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SearchService,\n    factory: SearchService.ɵfac,\n    providedIn: 'root'\n  });\n  return SearchService;\n})();","map":null,"metadata":{},"sourceType":"module"}